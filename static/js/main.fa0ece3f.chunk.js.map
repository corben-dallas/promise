{"version":3,"sources":["components/Button.jsx","components/Display.jsx","components/Buttons.jsx","helper/apiRequests.js","tasks/basic.js","components/ButtonsGroup.jsx","lib/asyncAPI.js","App.js","reportWebVitals.js","index.js"],"names":["Button","value","onBtnClick","disabled","className","onClick","Display","isDataLoading","result","isResultLoading","map","item","id","Buttons","children","onRemoveClick","calculateMaxValue","getArrayLength","asyncArr","Promise","resolve","length","getValueByIndex","index","get","findIsEqual","a","b","equal","window","Homework","subtractValues","subtract","findIsLess","less","callback","arrLength","max","Infinity","buttons","ButtonsGroup","useState","setResult","setAsyncArr","displayValue","setDisplayValue","setIsDataLoading","setIsResultLoading","useEffect","AsyncArray","handleButtonClick","btnValue","push","prev","uuid","Fragment","_wrap","fn","cb","setTimeout","Math","random","initial","Array","Error","from","this","set","pop","print","console","log","toString","add","multiply","divide","mod","lessOrEqual","sqrt","x","Object","freeze","API","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa0ece3f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Button = ({\r\n\tvalue,\r\n\tonBtnClick,\r\n\tdisabled,\r\n}) => {\r\n\treturn (\r\n\t\t<button \r\n\t\t\tclassName='button button--secondary'\r\n\t\t\tonClick={() => {onBtnClick(value)}}\r\n\t\t\tdisabled={disabled}\r\n\t\t>\r\n\t\t\t{value}\r\n\t\t</button>\r\n\t)\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react'\r\n\r\nconst Display = ({\r\n\tvalue,\r\n\tisDataLoading,\r\n\tresult,\r\n\tisResultLoading,\r\n}) => {\r\n\treturn (\r\n\t\t<div className='actions-group actions-group__display'>\r\n\t\t\t<p className='text text--primary'>Provided Data: </p>\r\n\t\t\t{isDataLoading &&  \r\n\t\t\t\t<p className='text text--primary'>\r\n\t\t\t\t\t[<span className='text text--secondary'>...Pushing value</span>]\r\n\t\t\t\t</p>\r\n\t\t\t}\r\n\r\n\t\t\t{!isDataLoading && \r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p className='text text--primary'>\r\n\t\t\t\t\t\t[{value.map((item) => \r\n\t\t\t\t\t\t\t<span className='text text--primary text--value' key={item.id}>{item.value}</span>\r\n\t\t\t\t\t\t)}]\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\r\n\t\t\t{result === null && !isResultLoading && null}\r\n\t\t\t{((result === null && isResultLoading) ||  (isResultLoading)) && <span className='text text--secondary'>Calculating result...</span>}\r\n\t\t\t{(!!result || result === 0) && !isResultLoading &&\r\n\t\t\t\t\t<div className='value-result'>\r\n\t\t\t\t\t\t<p className='text text--primary'>Result:</p>\r\n\t\t\t\t\t\t<span className={`text text--primary ${result === 0 ? 'text--danger' : ''}`}>{result === 0 ? 'Add value to array' : result}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Display;\r\n","import React from 'react'\r\n\r\nconst Buttons = ({\r\n\tchildren,\r\n\tonRemoveClick,\r\n\tisResultLoading,\r\n\tcalculateMaxValue,\r\n}) => (\r\n\t<div className='actions-group'>\r\n\t\t<div className='actions-group__buttons'>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t\t<div className='actions-group__buttons'>\r\n\t\t\t<div \r\n\t\t\t\tclassName={`button button--primary button--success ${isResultLoading ? 'button--disabled' : ''}`} \r\n\t\t\t\tonClick={calculateMaxValue}\r\n\t\t\t>\r\n\t\t\t\tCalculate max element in this array\r\n\t\t\t</div>\r\n\t\t\t<div \r\n\t\t\t\tclassName='button button--primary button--danger' \r\n\t\t\t\tonClick={onRemoveClick}\r\n\t\t\t>\r\n\t\t\t\t\tClear array's value\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n);\r\n\r\nexport default Buttons\r\n","export const getArrayLength = (asyncArr) => \r\n\tnew Promise((resolve) => {\r\n\t\tasyncArr.length((result) => {\r\n\t\t\tresolve(result);\r\n\t\t});\r\n\t});\r\n\r\nexport const getValueByIndex = (asyncArr, index) => \r\n\tnew Promise((resolve) => {\r\n\t\tasyncArr.get(index, (result) => {\r\n\t\t\tresolve(result);\r\n\t\t});\r\n\t});\r\n\r\nexport const findIsEqual = (a, b) => {\r\n\tconst { equal } = window.Homework;\r\n\r\n\treturn new Promise((resolve) => {\r\n\t\tequal(a, b, (result) => {\r\n\t\t\tresolve(result);\r\n\t\t});\r\n\t});\r\n};\r\n\r\nexport const subtractValues = (a, b) => {\r\n\tconst { subtract } = window.Homework;\r\n\r\n\treturn new Promise((resolve) => {\r\n\t\tsubtract(a, b, (result) => {\r\n\t\t\tresolve(result);\r\n\t\t});\r\n\t});\r\n};\r\n\r\nexport const findIsLess = (a, b) => {\r\n\tconst { less } = window.Homework;\r\n\r\n\treturn new Promise((resolve) => {\r\n\t\tless(a, b, (result) => {\r\n\t\t\tresolve(result);\r\n\t\t});\r\n\t});\r\n};\r\n","import { \r\n\tfindIsLess, \r\n\tfindIsEqual, \r\n\tsubtractValues, \r\n\tgetArrayLength, \r\n\tgetValueByIndex, \r\n} from \"../helper/apiRequests\";\r\n\r\nexport const calculateMaxValue = async(asyncArr, callback) => {\r\n\tlet arrLength = await getArrayLength(asyncArr);\r\n\tlet max = -Infinity;\r\n\tconst isEqual = await findIsEqual(arrLength, 0);\r\n\r\n\tif (isEqual) {\r\n\t\treturn callback(0);\r\n\t};\r\n\r\n\twhile(arrLength) {\r\n\t\tarrLength = await subtractValues(arrLength, 1)\r\n\t\tconst value = await getValueByIndex(asyncArr, arrLength);\r\n\t\t\r\n\t\tif(await findIsLess(max, value)) {\r\n\t\t\tmax = value;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\tcallback(max);\r\n};","import React, { useEffect, useState } from 'react';\r\nimport uuid from 'react-uuid';\r\n\r\nimport Button from './Button';\r\nimport Display from './Display';\r\nimport Buttons from './Buttons';\r\n\r\nimport { calculateMaxValue } from '../tasks/basic';\r\n\r\nconst buttons = [\r\n\t{id: 0, value: 0},\r\n\t{id: 1, value: 1},\r\n\t{id: 2, value: 2},\r\n\t{id: 3, value: 3},\r\n\t{id: 4, value: 4},\r\n\t{id: 5, value: 5},\r\n\t{id: 6, value: 6},\r\n\t{id: 7, value: 7},\r\n\t{id: 8, value: 8},\r\n\t{id: 9, value: 9},\r\n];\r\n\r\nconst ButtonsGroup = () => {\r\n\tconst [result, setResult] = useState(null);\r\n\tconst [asyncArr, setAsyncArr] = useState(null);\r\n\tconst [displayValue, setDisplayValue] = useState([]);\r\n\tconst [isDataLoading, setIsDataLoading] = useState(false);\r\n\tconst [isResultLoading, setIsResultLoading] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst { AsyncArray } = window.Homework;\r\n\t\tsetAsyncArr(new AsyncArray([]))\r\n\t\treturn () => {}\r\n\t}, [])\r\n\r\n\tconst handleButtonClick = (btnValue) => {\r\n\t\tsetIsDataLoading(true);\r\n\t\tasyncArr.push(btnValue, () => {\r\n\t\t\tsetDisplayValue(prev => [...prev, {value: btnValue, id: uuid()}]);\r\n\t\t\tsetIsDataLoading(false);\r\n\t\t\tsetResult(null);\r\n\t\t});\r\n\t}\r\n\r\n\tconst handleRemoveClick = () => {\r\n\t\tconst { AsyncArray } = window.Homework;\r\n\t\tsetAsyncArr(new AsyncArray([]))\r\n\t\tsetDisplayValue([]);\r\n\t\tsetResult(null);\r\n\t}\r\n\r\n\tconst handleCalculateMaxValue = () => {\r\n\t\tsetIsResultLoading(true);\r\n\r\n\t\tcalculateMaxValue(asyncArr, (result) => {\r\n\t\t\tsetResult(result);\r\n\t\t\tsetIsResultLoading(false);\r\n\t\t});\r\n\t};\r\n\t\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Buttons \r\n\t\t\t\tonRemoveClick={handleRemoveClick} \r\n\t\t\t\tcalculateMaxValue={handleCalculateMaxValue}\r\n\t\t\t\tisResultLoading={isResultLoading}\r\n\t\t\t>\r\n\t\t\t\t{buttons.map(item => \r\n\t\t\t\t\t<Button \r\n\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\tvalue={item.value}\r\n\t\t\t\t\t\tonBtnClick={handleButtonClick}\r\n\t\t\t\t\t\tdisabled={isDataLoading}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</Buttons>\r\n\r\n\t\t\t<Display \r\n\t\t\t\tresult={result}\r\n\t\t\t\tvalue={displayValue} \r\n\t\t\t\tisDataLoading={isDataLoading}\r\n\t\t\t\tisResultLoading={isResultLoading}\r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default ButtonsGroup;\r\n","export const API = () => {\r\n    const _wrap = (fn, cb) => {\r\n        setTimeout(() => { \r\n            cb(fn());\r\n        }, Math.random() * 200);\r\n    };\r\n    \r\n    class AsyncArray {\r\n        constructor(initial) {\r\n            if (initial && !(initial instanceof Array)) {\r\n                throw new Error('initial value is not an array');\r\n            }\r\n\r\n            const a = initial ? Array.from(initial) : [];\r\n\r\n            this.set = (index, value, cb) => _wrap(() => { a[index] = value; }, cb);\r\n            this.push = (value, cb) => _wrap(() => { a.push(value); }, cb);\r\n\r\n            this.get = (index, cb) => _wrap(() => a[index], cb);\r\n            this.pop = (cb) => _wrap(() => a.pop(), cb);\r\n            this.length = (cb) => _wrap(() => a.length, cb);\r\n\r\n            this.print = () => { console.log(a.toString()); };\r\n        }\r\n    }\r\n    \r\n    const add = (a, b, cb) => _wrap(() => a + b, cb);\r\n    const subtract = (a, b, cb) => _wrap(() => a - b, cb);\r\n    const multiply = (a, b, cb) => _wrap(() => a * b, cb);\r\n    const divide = (a, b, cb) => _wrap(() => a / b, cb);\r\n    const mod = (a, b, cb) => _wrap(() => a % b, cb);\r\n\r\n    const less = (a, b, cb) => _wrap(() => a < b, cb);\r\n    const equal = (a, b, cb) => _wrap(() => a == b, cb);\r\n    const lessOrEqual = (a, b, cb) => _wrap(() => a <= b, cb);\r\n    const sqrt = (x, cb) => _wrap(() => Math.sqrt(x), cb);\r\n\r\n    window.Homework = {\r\n        AsyncArray,\r\n        add,\r\n        subtract,\r\n        multiply,\r\n        divide,\r\n        mod,\r\n        less,\r\n        equal,\r\n        lessOrEqual,\r\n        sqrt\r\n    };\r\n\r\n    Object.freeze(window.Homework);\r\n};\r\n","import React from 'react';\nimport { API } from './lib/asyncAPI';\nimport ButtonsGroup from './components/ButtonsGroup';\n\nAPI();\n\nconst App = () => {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ButtonsGroup />\n\t\t</React.Fragment>\n\t)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}